#!/usr/bin/env python
import rospy
from geometry_msgs.msg import Twist
from std_msgs.msg import Bool

class MCP:
    def __init__(self):
        self.last_enable_time = None
        self.deadman_timeout = 0.3
        self.cmd_pub = rospy.Publisher('cmd_vel', Twist, queue_size=1)
        self.enable_sub = rospy.Subscriber('enable', Bool, self.enable_cb)

    def enable_cb(self, msg):
        if msg.data == True:
            self.last_enable_time = rospy.Time.now()

    def set_cmd(self, vx, vtheta):
        # Defaults to all zeros
        cmd = Twist()
        if self.last_enable_time is None:
            rospy.logwarn('Not yet enabled')
        elif (rospy.Time.now() - self.last_enable_time).to_sec() > self.deadman_timeout:
            rospy.logwarn('Too long since last True enable message')
        else:
            cmd.linear.x = vx
            cmd.angular.z = vtheta
        self.cmd_pub.publish(cmd)

    def loop_once(self):
        self.set_cmd(0.0, 0.0)

rospy.init_node('mcp')
r = rospy.Rate(10)
mcp = MCP()
while not rospy.is_shutdown():
    mcp.loop_once()
    r.sleep()


